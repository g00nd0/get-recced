[{"/home/g00nd0/projects/ga_projects/project2/globally-metal/src/index.js":"1","/home/g00nd0/projects/ga_projects/project2/globally-metal/src/App.js":"2","/home/g00nd0/projects/ga_projects/project2/globally-metal/src/reportWebVitals.js":"3","/home/g00nd0/projects/ga_projects/project2/globally-metal/src/components/MapDisplay.js":"4","/home/g00nd0/projects/ga_projects/project2/globally-metal/src/components/BandSearch.js":"5"},{"size":500,"mtime":1607666832450,"results":"6","hashOfConfig":"7"},{"size":310,"mtime":1607942726374,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607666832450,"results":"9","hashOfConfig":"7"},{"size":952,"mtime":1607914362435,"results":"10","hashOfConfig":"7"},{"size":1321,"mtime":1607938227765,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1xlc26t",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/home/g00nd0/projects/ga_projects/project2/globally-metal/src/index.js",[],["25","26"],"/home/g00nd0/projects/ga_projects/project2/globally-metal/src/App.js",["27"],"/home/g00nd0/projects/ga_projects/project2/globally-metal/src/reportWebVitals.js",[],"/home/g00nd0/projects/ga_projects/project2/globally-metal/src/components/MapDisplay.js",["28"],"import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nconst dotenv = require(\"dotenv\").config();\nconst api_key = process.env.REACT_APP_MAPS_API_KEY;\n// const google = { Google };\nconst mapStyles = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nexport class MapDisplay extends Component {\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={3} // use this zoom level for init zoom\n        style={mapStyles}\n        // initialCenter={{ lat: 47.444, lng: -122.176 }}\n        initialCenter={{ lat: 17.607789, lng: 8.081666 }} // use these coords for center map\n      />\n    );\n  }\n}\n\n//use hooks instead?\n// const MapDisplay = () => {\n//   return (\n//     <Map\n//       google={google}\n//       zoom={8}\n//       style={mapStyles}\n//       initialCenter={{ lat: 47.444, lng: -122.176 }}\n//     />\n//   );\n// };\n\nexport default GoogleApiWrapper({\n  apiKey: api_key,\n})(MapDisplay);\n","/home/g00nd0/projects/ga_projects/project2/globally-metal/src/components/BandSearch.js",["29"],"import React, { useState, useEffect } from \"react\";\n\nconst axios = require(\"axios\").default;\nconst insertQuery = \"behemoth\"; // change to input or prop, using search field?\nconst queryUrlStart = \"http://localhost:4000/\"; // need to change, as a prop?\n\nconst bandSearchUrl = (urlQuery) => {\n  const searchType = \"bands/?name=\";\n  const searchLength = \"length=5\";\n  const url = queryUrlStart + searchType + urlQuery + \"&\" + searchLength;\n  return url;\n};\n\nconst renderOutput = (bandArr) => {\n  return (\n    <div>\n      {bandArr.map((band) => (\n        <p key={band.band_id}>\n          <b>{band.band_name}</b>({band.band_country}), {band.band_genre}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nconst BandSearchRender = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const url = bandSearchUrl(insertQuery);\n\n  useEffect(() => {\n    axios\n      .get(url)\n      .then(function (response) {\n        setSearchResult(response.data.data.bands);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }, []);\n  console.log(\"output is below\");\n  console.log(searchResult);\n\n  return (\n    <div>{searchResult === [] ? \"empty\" : renderOutput(searchResult)}</div>\n  );\n};\n\nexport default BandSearchRender;\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"34","severity":1,"message":"38","line":3,"column":7,"nodeType":"36","messageId":"37","endLine":3,"endColumn":13},{"ruleId":"39","severity":1,"message":"40","line":43,"column":6,"nodeType":"41","endLine":43,"endColumn":8,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'dotenv' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [url]",{"range":"48","text":"49"},[1123,1125],"[url]"]